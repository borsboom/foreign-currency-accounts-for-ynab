steps:

#
# Checkout source code
#
- checkout: self
  submodules: recursive
  displayName: Checkout source code

#
# Install system dependencies
#
- bash: |
    set -xeu -o pipefail
    sudo apt-get update
    sudo apt-get install -y libsqlite3-dev
  condition:
    and(succeeded(),
        eq(variables['Agent.OS'], 'Linux'))
  displayName: Install Ubuntu packages (Linux)

#
# Install rustup
#
- bash: |
    set -xeu -o pipefail
    curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none -y
    echo "##vso[task.setvariable variable=PATH;]$HOME/.cargo/bin:$PATH"
  condition:
    and(succeeded(),
        ne(variables['Agent.OS'], 'Windows_NT'))
  displayName: Install rustup (Linux/macOS)
- powershell: |
    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
    Invoke-WebRequest -Uri https://win.rustup.rs -OutFile $env:TEMP\rustup-init.exe
  condition:
    and(succeeded(),
        eq(variables['Agent.OS'], 'Windows_NT'))
  displayName: Download rust-init (Windows)
- script: |
    "%TEMP%\\rustup-init" --default-toolchain none -y
    rustup set default-host x86_64-pc-windows-gnu
  condition:
    and(succeeded(),
        eq(variables['Agent.OS'], 'Windows_NT'))
  displayName: Install rustup (Windows)

#
# Check style
#
- bash: |
    set -xeu -o pipefail
    cargo fmt -- --check
    cargo clippy --package fca4ynab -- -D warnings
  condition: succeeded()
  displayName: Check style

#
# Build and run tests
#
- bash: |
    set -xeu -o pipefail
    cargo test
  condition:
    succeeded()
  displayName: Build and run tests

#
# Set release variables
#
- bash: |
    echo "##vso[task.setvariable variable=CI_BUILD_VERSION]$(Build.SourceBranchName)"
  condition: |
    and(succeeded(),
        startswith(variables['Build.SourceBranch'], 'refs/tags/release/'))
  displayName: Set release build version variable
- bash: |
    echo "##vso[task.setvariable variable=CI_BUILD_VERSION]$(Build.SourceBranchName).$(Build.BuildID)"
  condition: |
    and(succeeded(),
        eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Set master build version variable
- bash: |
    echo "##vso[task.setvariable variable=PLATFORM_SUFFIX]$(uname -m)-$(uname -s|tr A-Z a-z|sed 's/_.*$//')"
  condition: |
    succeeded()
  displayName: Set platform suffix variable

#
# Build release
#
- bash: |
    set -xeu -o pipefail
    for x in target/release target/x86_64-unknown-linux-musl/release; do
      mkdir -p $x
      chmod a+rwx $x
    done
    docker run --rm -v "$PWD:/home/rust/src" ekidd/rust-musl-builder:$(cat rust-toolchain) cargo build --release
    cp target/x86_64-unknown-linux-musl/release/fca4ynab "$BUILD_ARTIFACTSTAGINGDIRECTORY/fca4ynab-$CI_BUILD_VERSION-$PLATFORM_SUFFIX"
  condition: |
    and(succeeded(),
        or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),
           startswith(variables['Build.SourceBranch'], 'refs/tags/release/')),
        eq(variables['Agent.OS'], 'Linux'))
  displayName: Build release (Linux)
- bash: |
    set -xeu -o pipefail
    cargo build --release
    cp target/release/fca4ynab "$BUILD_ARTIFACTSTAGINGDIRECTORY/fca4ynab-$CI_BUILD_VERSION-$PLATFORM_SUFFIX"
  condition: |
    and(succeeded(),
        or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),
           startswith(variables['Build.SourceBranch'], 'refs/tags/release/')),
        ne(variables['Agent.OS'], 'Linux'))
  displayName: Build release (macOS/Windows)

#
# Publish build artifacts
#
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: fca4ynab-$(CI_BUILD_VERSION)-binaries
  condition: |
    and(succeeded(),
        or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),
           startswith(variables['Build.SourceBranch'], 'refs/tags/release/')))
  displayName: Publish artifacts

#
# Create/edit Github release
#
- task: GitHubRelease@0
  inputs:
    gitHubConnection: borsboom_oauth
    repositoryName: borsboom/foreign-currency-accounts-for-ynab
    action: edit
    tag: release/$(Build.SourceBranchName)
    title: Release $(Build.SourceBranchName)
    assets: $(Build.ArtifactStagingDirectory)/*
    assetUploadMode: replace
    isDraft: true
  condition: |
    and(succeeded(),
        startswith(variables['Build.SourceBranch'], 'refs/tags/release/'))
  displayName: Create/edit GitHub release
